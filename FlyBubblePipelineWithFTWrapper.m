function FlyBubblePipelineWithFTWrapper(experiment_folder_path)
  % Set up path to libraries
  modpath() ;
  
  % Get the path to the settings folder
  path_to_this_script = mfilename('fullpath') ;
  path_to_this_folder = fileparts(path_to_this_script) ;
  settingsdir = fullfile(path_to_this_folder, 'settings')

  % Probably need to be smarter about choosing this...
  analysis_protocol = '20190712_flybubble_flybowloptoKatie_mingrig_flytracker'

  % Build up the parameters cell array
  params = {'settingsdir',settingsdir,...
            'analysis_protocol',analysis_protocol, ...
            'forcecompute',false,...
            'doautomaticchecksincoming',false,...
            'doflytracking',true,...
            'doregistration',true,...
            'doledonoffdetection',true,...
            'dotrackwings',true,...
            'dosexclassification',true,...
            'docomputeperframefeatures',true,...
            'docomputehoghofperframefeatures',false,...
            'dojaabadetect',true,...
            'docomputeperframestats',false,...
            'doplotperframestats',false,...
            'domakectraxresultsmovie',true,...
            'doextradiagnostics',false,...
            'doanalysisprotocol',isunix(),...
            'doautomaticcheckscomplete',false};

  % Call the function to do the real work          
  [success,msgs,stage] = FlyBubblePipelineWithFT(experiment_folder_path, params{:}) ;
  
  % Error out if not success
  if ~success ,
    fprintf('FlyBubblePipelineWithFT() encountered some problem(s), maybe at stage %s:\n', stage)
    for i = 1 : length(msgs) ,
      msg = msgs{i} ;
      fprintf('%s\n', msg) ;
    end
    error('FlyBubblePipelineWithFT() failed!') ;
  end
end
